[{"E:\\MERN STACK\\REACT JS\\REACT JS PROJECTS\\WEATHER APP\\weatherapp\\src\\index.js":"1","E:\\MERN STACK\\REACT JS\\REACT JS PROJECTS\\WEATHER APP\\weatherapp\\src\\App.js":"2","E:\\MERN STACK\\REACT JS\\REACT JS PROJECTS\\WEATHER APP\\weatherapp\\src\\reportWebVitals.js":"3","E:\\MERN STACK\\REACT JS\\REACT JS PROJECTS\\WEATHER APP\\weatherapp\\src\\Weather.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":161,"mtime":1608711101604,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":3032,"mtime":1609394181890,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"uuh8sk",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"E:\\MERN STACK\\REACT JS\\REACT JS PROJECTS\\WEATHER APP\\weatherapp\\src\\index.js",[],["20","21"],"E:\\MERN STACK\\REACT JS\\REACT JS PROJECTS\\WEATHER APP\\weatherapp\\src\\App.js",[],"E:\\MERN STACK\\REACT JS\\REACT JS PROJECTS\\WEATHER APP\\weatherapp\\src\\reportWebVitals.js",[],"E:\\MERN STACK\\REACT JS\\REACT JS PROJECTS\\WEATHER APP\\weatherapp\\src\\Weather.js",["22","23","24","25"],"import React,{useEffect,useState} from 'react'\r\nimport './Weather.css'\r\n\r\nfunction Weather() {\r\n    const [city,setCity]=useState({});\r\n    const [search,setSearch]=useState(\"pune\");\r\n    const [weather,setWeather]=useState({});\r\n    const [sys ,setSys]=useState({});\r\n    const [name ,setName]=useState();\r\n    \r\n    \r\n    \r\n        \r\n          const fetchApi= async()=>{ const res= await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=2c2f90f87c3221b80e93d1b7e98f5f5f`);\r\n          const data=await res.json();\r\n          setCity(data.main);\r\n          setName(data.name);\r\n          setWeather(data.weather);\r\n          setSys(data.sys);\r\n\r\n\r\n    }\r\n\r\n      \r\n            \r\n        \r\n    // let tp= sys.sunrise;\r\n    // let date= new Date(tp);\r\n    // let h=date.getHours();\r\n    // let m= date.getMinutes();\r\n    // let t=h+\":\"+m;\r\n    // let tp2= sys.sunset;\r\n    // let date2= new Date(tp2);\r\n    // let h2=date2.getHours();\r\n    // let m2= date2.getMinutes();\r\n    // let t2=h2+\":\"+m2;\r\n    \r\n\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div id=\"main\">\r\n                <div id=\"search\">\r\n\r\n                    <input type=\"search\"\r\n                    onChange={(e)=>{\r\n                        e.preventDefault();\r\n                        setSearch(e.target.value);\r\n                        \r\n\r\n                    }}\r\n                    \r\n                     />\r\n                     <button className=\"btn\" onClick={ fetchApi}>Search</button>\r\n                     \r\n                    \r\n                </div>\r\n                { \r\n                    city?(\r\n                    <div>\r\n                        <div id=\"content\">\r\n                         <h2 className=\"icon\"><i className=\" f fas fa-street-view\"></i>{city.temp}°C\r\n                          {(city.temp>10)?<i className=\" sun fas fa-cloud-sun\t\"></i>:<i className=\"sun  fas fa-cloud-sun-rain\t\"></i>}</h2>\r\n                         \r\n                         \r\n                        <div className=\"tmp\">\r\n                            \r\n                            <ul>\r\n                                <li>MIN:{city.temp_min}°C</li>\r\n                                <li>MAX:{city.temp_max}°C</li>\r\n                            </ul>\r\n\r\n                        </div>\r\n                        <div className=\"prs\">\r\n                            \r\n                            <ul>\r\n                                <li>PRESSURE:{city.pressure} hPa</li>\r\n                                <li>HUMIDITY:{city.humidity}%</li>\r\n                            </ul>\r\n\r\n                        </div>\r\n                        {/* <div>\r\n                            <h1>{weather.main}</h1>\r\n                        </div> */}\r\n                         </div>\r\n                    </div>)\r\n                    :(<h2 className=\"m-5 d-1 not\" style={{color:'white'}}>404, NOT FOUND</h2>)\r\n\r\n                }\r\n               \r\n\r\n               \r\n\r\n            </div >\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nexport default Weather\r\n",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":1,"column":15,"nodeType":"32","messageId":"33","endLine":1,"endColumn":24},{"ruleId":"30","severity":1,"message":"34","line":7,"column":12,"nodeType":"32","messageId":"33","endLine":7,"endColumn":19},{"ruleId":"30","severity":1,"message":"35","line":8,"column":12,"nodeType":"32","messageId":"33","endLine":8,"endColumn":15},{"ruleId":"30","severity":1,"message":"36","line":9,"column":12,"nodeType":"32","messageId":"33","endLine":9,"endColumn":16},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'weather' is assigned a value but never used.","'sys' is assigned a value but never used.","'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]